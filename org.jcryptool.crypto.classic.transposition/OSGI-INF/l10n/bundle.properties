###############################################################################
# Copyright (c) 2010 JCrypTool and others - https://github.com/jcryptool
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
###############################################################################
bundleVendor=jcryptool.org
bundleName=Transposition Plug-in
algorithm.name=Transposition
command.description = Transposes characters of the plain (columnar transposition with definable read-in / read-out directions).
command.syntax = transposition -k <KEY> [-t1ReadIn <rw/cw>] [-t1ReadOut <rw/cw>] (-mD Decryption mode, -mE Encryption mode) (-iT <Text to process (in "")>, -iF <File to process>, -iAE (active editor is chosen)) [-a <ALPHABET>] [-k2 <KEY>] [-t2ReadIn <rw/cw>] [-t2ReadOut <rw/cw>]
example.explanation = Encrypts the active editor's text with the key "akey"
example.explanation.0 = Encrypts the active editor's text using double columnar transposition with the keys "akey" and "keyTwo"
example.explanation.1 = Decrypts the active editor's text using double columnar transposition with the keys "akey" and "keyTwo"
example.explanation.2 = Encrypts the active editor's text with the key "akey", reading the text into the transposition table column-wise, and reading out the transposed text row-wise
example.explanation.3 = Decrypts texts that were encrypted in the previous example (The read-in/out-order at decryption must be the same as it was at encryption)
example.explanation.4 = Encrypts the text "TEST TEXT" with the key "AKEY", using only the uppercase alphabet