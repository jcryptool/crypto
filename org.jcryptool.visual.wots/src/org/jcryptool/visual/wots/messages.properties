invalidChar_txt =Invalid character
headline_txt =Winternitz OT-Signature (WOTS / WOTS+)
header_txt =The Winternitz one-time signature scheme creates a signature to a given message. WOTS+ is a main building block of XMSS which can withstand known quantum computer attacks.
message_txt =Message
defaultMessage_txt =Standard message
loadMessage_txt =Load message from file
winPara_txt =Winternitz parameter w
hashFunction_txt =Hash function
privateKey_txt =Private key
publicKey_txt =Public key
signature_txt =Signature
btnGenKeys_txt =Generate keys
btnGenSig_txt =Generate signature
btnVerSig_txt =Verify signature
btnReset_txt=Reset
btnRestart_txt=Restart
error_txt =An error occured
errorShort_txt=Error
showDetails_txt =Show details
hideDetails_txt =Hide details
byte_txt =byte
hash_txt =Message hash		
outWelcome_txt=The Winternitz one-time signature algorithm is a hash-based method to sign messages. The public key is generated by iteratively hashing the randomly generated blocks of the private key. The number of iterative hashes is determined by the Winternitz parameter w\u22652): So each block of the private key is hashed w-1 times.\n\nFor creating a signature, the steps are similar. The blocks of the private key are hashed multiple times (but less than w-1 times). The number of hash computations of each block are determined by the message that has to be signed. As the hash function is assumed to be a one-way function it is not possible to get back to the private key from a computed signature.\n\nThe verifier of a signature computes the missing hash steps, such that each block is hashed w-1 times. If the result matches the public key, the signature is valid.
outGenKeys_txt =Key generation:\n\nWhen generating the keys, the parameters t, n and w are defined first.\n\nPrivate key:\nt blocks are filled with n random bytes.\n\nPublic key:\nEvery block of the private key is hashed w-1 times, which results into the blocks of the public key.\n\nFor more details and formulas on how to generate the parameters visit the online help (press F1 or the ? icon).
outGenSig_txt =Signature generation:\n\nWhen generating a signature of a message, first the hash-value and a checksum over the hash-value are calculated. These values are split up into t parts and will be used as integer values b\u1D62 for further calculations.\n\nTo compute the signature, the blocks of the private key are hashed b\u1D62 times.\n\nFor more details and formulas on how to calculate the checksum visit the online help (press F1 or ? icon).
outVerSig_txt =Signature verification:\n\nTo verify a signature, first the b\u1D62 values are calculated (see signature generation).\n\nSecondly, each block of the signature is hashed w-1-b\u1D62 times. If the computation matches the blocks of the public key (hashed w-1 times), the signature is valid.\n\nFor more details visit the online help (press F1 or ? icon).
outGenKeysPlus_txt =Key generation:\n\nWhen generating the keys, the parameters t, n and w are calculated first.\n\nPrivate key:\nt blocks are filled, each with n random bytes.\n\nPublic key:\nAdditionally w-1 random blocks (R) are generated. Now on every block, in w-1 rounds, first a XOR with the block of R followed by the hash function are applied. The public key consists of the calculated blocks and the blocks of R.\n\nFor more details and formulas on how to generate the parameters visit the online help (press F1 or ? icon).
outGenSigPlus_txt =Signature generation:\n\nWhen generating a signature of a message, first the hash value and a checksum over the hash-value are calculated. Both values are split up into overall t parts and will be used as integer values b\u1D62 for further calculations.\n\nTo compute the signature, the blocks of the private key are processed in b\u1D62 rounds (XOR and hash every round).\n\nFor more details and formulas on how to calculate the checksum visit the online help (press F1 or ? icon).
outVerSigPlus_txt =Signature verification:\n\nTo verify a signature, first the b\u1D62 values are calculated (see signature generation).\n\nSecond the blocks of the signature are processed w-1-b\u1D62 times (XOR and hash every round).  If the computation matches the blocks of the public key (processed w-1 times), the signature is valid.\n\nFor more details and formulas on how to calculate the checksum visit the online help (press F1 or ? icon).
fileType_txt=Text file (.txt)
WotsView_Key_Generation=icons/Key_Generation_en.PNG
WotsView_Overview2=icons/Overview2_en.PNG
WotsView_Signature_Generation=icons/Signature_Generation_en.PNG
WotsView_Signature_Verification=icons/Signature_Verification_en.PNG
