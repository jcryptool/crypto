invalidChar_txt =Ungültiges Zeichen
headline_txt=Winternitz Einmal-Signatur (WOTS / WOTS+)
header_txt =Der Winternitz Einmal-Signatur-Algorithmus dient zum Signieren einer Nachricht. WOTS+ ist der Hauptbestandteil von XMSS, mit dem man Quantencomputer-resistente Signaturen erzeugen kann.
message_txt =Nachricht
defaultMessage_txt =Standardnachricht
loadMessage_txt =Lade Nachricht aus Datei
winPara_txt =Winternitz-Parameter w
hashFunction_txt =Hashfunktion
privateKey_txt =Privater Schlüssel
publicKey_txt =Öffentlicher Schlüssel
signature_txt =Signatur
btnGenKeys_txt =Schlüssel erstellen
btnGenSig_txt =Signatur erstellen
btnVerSig_txt =Signatur prüfen
btnReset_txt=Zurücksetzen
btnRestart_txt=Neustart
error_txt =Es ist ein Fehler aufgetreten
errorShort_txt=Fehler
showDetails_txt =Details anzeigen
hideDetails_txt =Details verstecken
byte_txt =Byte
hash_txt =Hash der Nachricht
outWelcome_txt =Das Winternitz Einmal-Signaturverfahren (Winternitz one-time signature -- WOTS) ist ein Hash-basiertes Verfahren zum digitalen Signieren von Nachrichten. Der öffentliche Schlüssel wird erzeugt, indem die zufällig erzeugten Blöcke des privaten Schlüssels iterativ gehasht werden. Die Anzahl der iterativen Hashes wird vom Winternitz-Parameter w\u22652 bestimmt: So wird jeder Block des privaten Schlüssels w-1 mal gehasht.\n\nBeim Erzeugen einer Signatur sind die Schritte ähnlich. Die Blöcke des privaten Schlüssels werden mehrfach gehasht (aber weniger oft als w-1 mal). Die Anzahl der Hash-Berechnungen wird durch die zu signierende Nachricht bestimmt. Da die Hashfunktion als One-Way-Funktion angenommen wird, ist es nicht möglich, von der berechneten Signatur auf den privaten Schlüssel zurückzuschließen.\n\nBei der Verifikation einer Signatur werden die verbliebenen Hash-Berechnungen ausgeführt, so dass jeder Block genau w-1 mal gehasht wurde. Wenn das Ergebnis mit dem öffentlichen Schlüssel übereinstimmt, ist die Signatur gültig.
outGenKeys_txt =Schlüsselerzeugung:\n\nBei der Schlüsselerzeugung von WOTS werden zuerst die Parameter t, n und w ermittelt.\n\nPrivater Schlüssel:\nEs werden t Blöcke mit je n zufälligen Bytes gefüllt.\n\nÖffentlicher Schlüssel:\nJeder Block des privaten Schlüssels durchläuft w-1 mal die Hashfunktion. Das Resultat sind die Blöcke des öffentlichen Schlüssels.\n\nDetails und Formeln zur Berechnung der Parameter siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
outGenSig_txt =Signaturerzeugung:\n\nBei der Erstellung einer Signatur mit WOTS wird zuerst der Hash der Nachricht erzeugt und eine Prüfsumme über diesen berechnet. Diese beiden Werte werden in insgesamt t Teile aufgeteilt und für das weitere Vorgehen als Integer-Werte b\u1D62 interpretiert.\n\nBei der Erstellung der Signatur werden die Blöcke des privaten Schlüssels jeweils b\u1D62 mal gehashed.\n\nDetails und Formel zur Berechnung der Prüfsumme (checksum) siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
outVerSig_txt =Signaturprüfung:\n\nBei der Prüfung der Signatur werden zuerst die b\u1D62 Werte gleich wie bei der Signaturerstellung berechnet.\n\nDanach wird jeder Block der Signatur w-1-b\u1D62 mal gehashed, somit wurde der private Schlüssel nun insgesamt w-1 mal gehashed und es sollte jeder berechnete Block dem Wert des öffentlichen Schlüssels entsprechen.\n\nWeitere Details siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
outGenKeysPlus_txt =Schlüsselerzeugung:\n\nBei der Schlüsselerzeugung von WOTS+ werden zuerst die Parameter t, n und w ermittelt.\n\nPrivater Schlüssel:\nEs werden t Blöcke mit n zufälligen Bytes aufgefüllt.\n\nÖffentlicher Schlüssel:\nZusätzlich werden w-1 Blöcke (R) zufällig generiert. Danach wird auf jeden Block des privaten Schlüssels in w-1 Runden zuerst ein XOR mit den Blöcken R und danach die Hashfunktion angewandt.\nDer öffentliche Schlüssel besteht nun aus den berechneten Blöcken plus den vorangestellten Blöcken von R.\n\nDetails und Formeln zur Berechnung der Parameter siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
outGenSigPlus_txt =Signaturerzeugung:\n\nBei der Erstellung einer Signatur mit WOTS+ wird zuerst der Hash der Nachricht erzeugt und eine Prüfsumme über diesen berechnet. Diese beiden Werte werden in t Teile aufgeteilt und für das weitere Vorgehen als Integer-Werte b\u1D62 interpretiert.\n\nBei der Erstellung der Signatur werden die Blöcke des privaten Schlüssels nun jeweils in b\u1D62 Runden bearbeitet (jede Runde XOR + Hash).\n\nDetails und Formel zur Berechnung der Prüfsumme (checksum) siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
outVerSigPlus_txt =Signaturprüfung:\n\nBei der Prüfung der Signatur mit WOTS+ werden zuerst die b\u1D62 Werte gleich wie bei der Signaturerstellung berechnet.\n\nDanach wird jeder Block der Signatur in w-1-b\u1D62 Runden bearbeitet (jede Runde XOR + Hash), somit wurde der private Schlüssel nun insgesamt w-1 mal bearbeitet und es sollte jeder berechnete Block dem Wert des öffentlichen Schlüssels entsprechen.\n\nDetails und Formel zur Berechnung der Prüfsumme (checksum) siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol drücken).
fileType_txt=Textdatei (.txt)
WotsView_Key_Generation=icons/Key_Generation_de.PNG
WotsView_Overview2=icons/Overview2_de.PNG
WotsView_Signature_Generation=icons/Signature_Generation_de.PNG
WotsView_Signature_Verification=icons/Signature_Verification_de.PNG
