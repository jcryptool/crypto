#Eclipse messages class for SigComposite
SigComposite_grpSignatureGeneration=Signaturerzeugung
SigComposite_grpSignedDoc=Signiertes Dokument
SigComposite_description=Die Visualisierung soll die Erzeugung einer Signatur f\u00fcr ein bestimmtes Dokument zeigen. Eine digitale Signatur kann zur Authentisierung der Identit\u00e4t des Senders oder des Unterzeichners des Dokuments genutzt werden. Sie sichert au\u00dferdem die Integrit\u00e4t des Dokuments selbst.
SigComposite_lblHeader=Signaturvisualisierung
SigComposite_lblHash=
SigComposite_lblSignature=
SigComposite_lblProgress=Schritt %s von 4
#The TabFolder
SigComposite_tbtmNewItem_0=Schritt 1
SigComposite_tbtmNewItem_1=Schritt 2
SigComposite_tbtmNewItem_2=Schritt 3
SigComposite_tbtmNewItem_3=Schritt 4
SigComposite_txtDescriptionOfStep1=\r\nInput ausw\u00e4hlen\r\n\r\nSie k\u00f6nnen ausw\u00e4hlen, was Sie signieren m\u00f6chten: Entweder \u00f6ffnen Sie eine bereits vorhandene Datei oder geben Sie selbst einen Text ein. Um den Signaturerstellungsprozess zu starten, klicken Sie den Button "Input ausw\u00e4hlen" und folgen Sie den Anweisungen.
SigComposite_txtDescriptionOfStep2=\r\nHashfunktion ausw\u00e4hlen\r\n\r\nEine Hashfunktion ist ein Algorithmus oder eine Subroutine, die einen Datensatz variabler L\u00e4nge auf einen Datensatz fixer L\u00e4nge abbildet. Da die Gr\u00f6\u00dfe des Hashwertes einer Datei normalerweise viel kleiner ist als die Datei selbst, wird direkt der Hashwert signiert. Dadurch wird die Effizienz des Signaturerzeugungsprozesses gesteigert. Bei der Signaturerstellung sowie bei der Verifikation der Signatur muss der gleiche Hashalgorithmus verwendet werden.
SigComposite_txtDescriptionOfStep3=\r\nSignaturfunktion ausw\u00e4hlen\r\n\r\nUm den von Ihnen gew\u00e4hlten Input zu signieren, k\u00f6nnen Sie zwischen verschiedenen Signaturfunktionen ausw\u00e4hlen. Einige Signaturverfahren basieren auf asymmetrischer Verschl\u00fcsselung, wie RSA, andere Verfahren wurden eigens f\u00fcr diesen Zweck entwickelt, wie DSA. Um eine Signatur zu erstellen und anschlie\u00dfend zu pr\u00fcfen, ben\u00f6tigt man zwei verschiedene Schl\u00fcssel. Der private Schl\u00fcssel wird f\u00fcr die Erstellung der Signatur genutzt. Nur der Besitzer des Schl\u00fcssels kennt ihn und muss ihn geheim halten. Der \u00f6ffentliche Schl\u00fcssel kann von jedem verwendet werden, um die Signatur zu verifizieren.
SigComposite_txtDescriptionOfStep4=\r\nMit Hilfe der Signatur kann nun der Empf\u00e4nger der Nachricht die Authentizit\u00e4t des Senders \u00fcberpr\u00fcfen und sichergehen, dass die Nachricht von diesem Stammt und nicht ver\u00e4ndert wurde\nUm die erzeugte Signatur anzuzeigen, klicken Sie auf den Button \u201EErzeugte Signatur anzeigen\u201C. Dort finden Sie alle relevanten Informationen zu der erzeugten Signatur - der Besitzer, Informationen \u00fcber den Schl\u00fcssel und der gew\u00e4hlten Signaturfunktion. Au\u00dferdem ist es m\u00f6glich, zwischen verschiedenen Darstellungsm\u00f6glichkeiten zu w\u00e4hlen. 
SigComposite_txtDescriptionOfStep4_Success=\r\nDie Signatur wurde erfolgreich erzeugt!\r\n
#Buttons
SigComposite_btnHash=Hashfunktion
SigComposite_btnSignature=Signaturfunktion
SigComposite_btnChooseInput=Input ausw\u00e4hlen
SigComposite_btnOpenInEditor=Erzeugte Signatur anzeigen
SigComposite_btnReset=Reset
SigComposite_btnReturn=Zur\u00fcck zu JCT-PKI
SigComposite_menu=Alles ausw\u00e4hlen

SigComposite_MessageTextReturn=Klicken Sie auf "Zur\u00fcck zu JCT-PKI" um zur\u00fcckzukehren und dort fortzufahren
SigComposite_MessageTitleReturn=Information
