# SPHINCs Plugin English -- Eclipse modern messages class

# Tab descriptions
SphincsTab_0=Bitmasks and Key Generation
SphincsTab_1=Sign and Verify
SphincsTab_2=SPHINCs Overview
 
 
 # Title description
SphincsDescription_titleBox=SPHINCs Signature
SphincsDescription_titleDesc=SPHINCS is a hash-based signature algorithms which allows you to create signatures that also provide security against attacks with quantum computers. For this, methods such as HORST structures and WOTS+ one time signatures are used. SPHINCS is stateless.


# Switching Tabs messages/ state messages
SignatureMessageBoxText=Please create a signature in the second tab at first.
SphincsTree_Generation_Info=Please generate key pairs at first.
NoKeyText=Please generate a key in the Bitmasks and Key generation tab at first.
Info=Info


### SPHINCS Tab "Bitmasks and Key Generation" ###
SphincsDescription_grp_seed=Seed
SphincsDescription_btn_Generation=Generate key pair
SphincsDescription_grp_bitmask=Bitmasks
SphincsDescription_grp_key=Public key
SphincsDescription_lbl_information=Information about the keys
SphincsDescription_keyInfo1=SPHINCS-256\n\nQuantum security: 128 Bit\nPrivate-Key:
SphincsDescription_keyInfo2=Bytes\nPublic-Key:
SphincsDescription_keyInfo3=Bytes\nThe goal of the key generation process is to compute the root node of the WOTS+ structure on the last level of the SPHINCS structure.\nThe WOTS+ root node (= SPHINCS public key) consists of a set of bitmasks (shown here in base64). The seed is used in the key generation step to generate the bitmasks. There are 32 bitmasks a 256 bit.\nFurther information is given in the online help.
SphincsDescription_btn_renewKey=Generate a new key pair
SphincsDescription_bracket=(
SphincsDescription_bytes= byte)


### SPHINCS Tab "Sign and Verify" ###
SphincsSign_Group_0=Message
SphincsSign_Group_1=Signature
SphincsSign_Text_0=Example of a message: Please insert the message which you want to sign with SPHINCS here.

# Label
SphincsSign_Label_0=Color highlight desired part:
SphincsSign_Label_1=Current leaf

# Button
SphincsSign_Button_0=Sign message
SphincsSign_Button_1=Authentication path 
SphincsSign_Button_2=Current leaf
SphincsSign_Button_3=HORST signature

# Verify status/button
SphincsVerify_Generated=Signature generated
SphincsVerify_Success=Verification successful
SphincsVerify_Fail=Verification NOT successful
SphincsVerify_Button_0=Verify signature


### SPHINCS Tab "SPHINCS-Overview" ###
SphincsDecription_Button_1=Show SPHINCS tree description
SphincsDecription_Button_2=Hide SPHINCS tree description

SphincsDecription_Text_0=SPHINCS-256 Representation of the tree: Here you can see an extract of the SPHINCS structure. The SPHINCS scheme is based on a Hypertree with a overall height of h, in SPHINCS-256 is the overall height 60 (h=60). Besides that there are 12 levels (d=12), each level also consists of trees. Each of these levels have the height 5 (= h/d, 60/12). The higher the levels, the more trees with the height of 5 are on this level. To support easier understanding, the Merkle-Tree Plugin, with the XMSS configuration (on the upper right) shows a little Hypertree. The levels are indicated with different colours. At the very bottom left you can see the HORST structure. HORST is the few-time signature scheme which is used to sign messages on the bottom level in SPHINCS. There are 2^16, so 65.536 HORST trees at the bottom of the overall SPHINCS structure. In this overview you can only see the structure which is used for signing. On the right side there are the WOTS+ structures. The signature of the hashed WOTS+ structures is needed in order to verify the SPHINCS-signature afterwards.\nFor details please up the online help. Besides that a plug-in for WOTS is available in JCrypTool.
SphincsDecription_Text_1=Information about the WOTS+ and HORST elements.

# Tree stuff
ZestLabelProvider_0= HORST
ZestLabelProvider_1= WOTS
ZestLabelProvider_2=Hash of the SPHINCS Public Key
ZestLabelProvider_3=Public Key
ZestLabelProvider_9=No Root-Node
ZestLabelProvider_7=0
ZestLabelProvider_8=1

# Tree mouse over 
ZestLabelProvider_4=Content

# Selected nodes
ZestLabelProvider_5=Content of HORST
ZestLabelProvider_6=Content of WOTS
