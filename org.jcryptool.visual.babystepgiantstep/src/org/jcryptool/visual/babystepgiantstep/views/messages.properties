#Eclipse modern messages class
#Mon Sep 22 23:21:53 CEST 2014
BabystepGiantstepView_0=Shanks Babystep-Giantstep-Algorithm
BabystepGiantstepView_2=In this visualization of Shanks Babystep-Giantstep-Algorithm, the computation of the discrete logarithm problem is presented. We would like to calculate the discrete logarithm of a to the base g in (Z/pZ)*. Let (Z/pZ)* be a finite cyclic group of order phi(p) \:\= n and g a generator of the group with the identity element 1 in (Z/pZ)*. Let a be a group element. We would like to find the smallest non-integer x such that a \= g ^ x in mod p.
BabystepGiantstepView_25=In this step we calculate the group order and the ceiling of squareroot of the group order. The multiplicative inverse of generator in mod G will be used for the next step for calculating the babysteps. We do the approach x \= q * m + r, 0 <\= r < m, where r is the rest and q is the quotient of division of x by m.
BabystepGiantstepView_26=Continue to step 2
BabystepGiantstepView_27=Step 2
BabystepGiantstepView_28=Group order (n)\:
BabystepGiantstepView_29=Upper bound\: m \= \u23BE \u221A(n) \u23CB
BabystepGiantstepView_3=Step 1 - Enter the parameters
BabystepGiantstepView_30=Multiplicative inverse (Inv)\:
BabystepGiantstepView_4=Enter a cyclic group (p \u2208 Prim, p > 1)\:
BabystepGiantstepView_41=The Babystep-Giantstep-Algorithm calculates q and r. We use x \= q * m + r and put it in the formula a \= g ^ x \= g ^ (q * m + r) \=> a * g ^ - r \= (g ^ m) ^ q. First we are calculating the baby steps B \= {(r, a * g ^ - r)\: 0 <\= r < m}.
BabystepGiantstepView_42=The Babystep-Giantstep-Algorithm calculates q and r. We use x \= q * m + r and put it in the formula a \= g ^ x \= g ^ (q * m + r) \=> a * g ^ - r \= (g ^ m) ^ q. First we are calculating the baby steps B \= {(r, a * g ^ - r)\: 0 <\= r < m}. Even if we find a pair (r, 1), then we can set x \= r, and say, that we had solved the DL-Problem.
BabystepGiantstepView_43=Continue to step 3
BabystepGiantstepView_44=Step 3 - Calculate the babysteps
BabystepGiantstepView_47=Details of the calculation
BabystepGiantstepView_5=Enter a generator (g > 1)\:
BabystepGiantstepView_6=Enter a group element (a > 1)\:
BabystepGiantstepView_64=Step 4 calculates the giantsteps. We set d \= g ^ m and verify for q \= 1, 2, 3, ...  if the group element d ^ q appears as the second component of an element of B. If a pair (r, d ^ q) is found in B then a * g ^ - r \= d ^ q \= g ^ (q * m) is a valid equation and the DL problem is solved. 
BabystepGiantstepView_65=Continue to step 4
BabystepGiantstepView_66=Step 4 - Calculate the giantsteps
BabystepGiantstepView_69=Details of the calculation
BabystepGiantstepView_7=Due to the size of the cyclic group, and the resulting increase in runtime, the tabular presentation is deactivated.
BabystepGiantstepView_75=We found a pair (r, d ^ q) in the babystep set for calculating the discrete logarithm 
BabystepGiantstepView_76=\nThis satisfies the equation\: a \= g ^ x mod p. This means for this example\: 
BabystepGiantstepView_88=There is no pair (r, d ^ q) found in B so there is no solution for the given parameters.
BabystepGiantstepView_90=Compute result
BabystepGiantstepView_93=Reset calculations
BabystepGiantstepView_94=Result
BabystepGiantstepView_95=There is no multiplicative inverse of 
BabystepGiantstepView_96=in the cyclic group
BabystepGiantstepView_97=.Please use other input parameter.
Parameter_0=Please only enter natural numbers, and make sure that the group\nelement is not a multiple of the cyclic group and vice versa.
Parameter_1=Parameter verification
Parameter_2=Cancel
Parameter_3=Next prime
