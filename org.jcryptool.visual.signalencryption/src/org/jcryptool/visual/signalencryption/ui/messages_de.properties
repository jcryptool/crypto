#Eclipse modern messages class
#Mon Mar 31 15:53:42 CEST 2014

SignalEncryption_TabTitle1=Signal Protokoll - Double Ratchet-Verschlüsselung
SignalEncryption_TabDesc1=Beim Signal Protokoll handelt es sich um jenes Verfahren das beim Namensgebenden Signal Messenger als auch WhatsApp zum Einsatz kommt.\nDieses Protokoll gliedert sich grob in 2 Abschnitte:\n         Ein 3-facher Diffie-Hellman (DH) Schlüsselaustausch.\n         Das \u201EDouble Ratchet\u201C Verfahren zum Versenden und Empfangen von Nachrichten.\n\nIn diesem Plugin wird nun das Double Ratchet Verfahren Schritt für Schritt erklärt. Was konkret beim Senden der allerersten Nachricht geschieht ist in der Onlinehilfe dokumentiert. Wichtig davon zu wissen ist, dass Alice so den Shared Secret Schlüssel erhält.\nDas Double Ratchet besteht dann einerseits aus einem wiederholten Diffie-Hellman Schlüsselaustausch, als auch Funktionen zur weiteren Schlüsselerzeugung, den sogenannten Schlüssel Derivation Functions (kurz KDF).\nWeitere Informationen zum Diffie-Hellman Schlüssel Austausch finden Sie in der entsprechenden Visualisierung.\n\nIn diesem Demo-Szenario beginnen wir damit das Alice eine Nachricht an Bob versendet. Daher sind gewisse Schlüssel auf Bobs Seite noch nicht vorhanden, da diese erst beim Empfang der ersten Nachricht erzeugt werden. 
SignalEncryption_TabTitle2=Signal Protokoll - Double Ratchet
SignalEncryption_TabDesc2=Der Double Ratchet Algorithmus basiert auf ein gemeinsames Geheimnis zwischen den Kommunikationspartnern. Typischerweise nutzen die Kommunikationspartner ein Schlüsselaustauschprotokoll wie X3DH (siehe Online Hilfe) um sich auf dieses gemeinsame Geheimnis zu einigen.\n
SignalEncryption_TblTitel_Key=Identitäten und Pre-Key-Bundles
SignalEncryption_TblTitel_Description=Beschreibung
SignalEncryption_TblTitel_ValuesAlice=Alices Schlüssel
SignalEncryption_TblTitel_ValuesBob=Bobs Schlüssel

SignalEncryption_KeyName_Diffie_Private=Diffie Hellman private key
SignalEncryption_KeyName_Diffie_Public=Diffie Hellman public key
SignalEncryption_KeyName_Shared=Shared Secret Key
SignalEncryption_KeyName_Root=Root Chain Key
SignalEncryption_KeyName_Sending=Sending Chain Key
SignalEncryption_KeyName_Receiving=Receiving Chain Key
SignalEncryption_KeyName_MsgKey=Message Key

SignalEncryption_DescText_Diffie_Private=Der private DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Diffie_Public=Der öffentliche DH Schlüssel der jeweiligen Person
SignalEncryption_DescText_Shared=Geheimer Schlüssel der von den Kommunikationspartnern mittels einem vereinbarten Schlüsselaustausch erstellt wird. Dieser Schlüssel dient als erster Root Chain Key.
SignalEncryption_DescText_Root=Wird als Ausgangswert für die Sending und Receiving Chains verwendet.
SignalEncryption_DescText_Sending=Wird verwendet um einen Message Key zu generieren. 
SignalEncryption_DescText_Receiving=Wird verwendet um einen Message Key zu generieren.
SignalEncryption_DescText_MsgKey=Ist ein Output aus der Sending Chain bzw. der Receiving Chain und wird verwendet um eine Nachricht zu ver- oder entschlüsseln."


SignalEncryption_btn_generateBoth=Alle Schlüssel neu erzeugen
SignalEncryption_btn_generateAlice=Alices Schlüssel neu erzeugen
SignalEncryption_btn_generateBob=Bobs Schlüssel neu erzeugen

SignalEncryption_btnName_Alice=Alice
SignalEncryption_btnName_Bob=Bob
SignalEncryption_btnName_Previous=Zurück
SignalEncryption_btnName_Next=Weiter

SignalEncryption_alice_AlgorithmGroupDescription=Alice
SignalEncryption_bob_AlgorithmGroupDescription=Bob
SignalEncryption_stepGroupDescription=Schritte
SignalEncryption_DiffieHellmanGroupDescription=Diffie Hellman Ratchet
SignalEncryption_RootChainDescription=Root Chain
SignalEncryption_SendingChainDescription=Sending Chain
SignalEncryption_ReceivingChainDescription=Receiving Chain
SignalEncryption_MessageBoxDescription=Nachricht

SignalEncryption_aliceDiffieHellmanLabel1=Bobs DH Public Key
SignalEncryption_aliceDiffieHellmanLabel2=DH Berechnung
SignalEncryption_aliceDiffieHellmanLabel3=Alices DH Schlüsselpaar
SignalEncryption_bobDiffieHellmanLabel1=Alices DH Public Key
SignalEncryption_bobDiffieHellmanLabel2=DH Berechnung
SignalEncryption_bobDiffieHellmanLabel3=Bobs DH Schlüsselpaar

SignalEncryption_aliceRootChainLabel1=Root Chain Key
SignalEncryption_aliceRootChainLabel2=KDF
SignalEncryption_aliceRootChainLabel3=Neuer Root Chain Key
SignalEncryption_bobRootChainLabel1=Root Chain Key
SignalEncryption_bobRootChainLabel2=KDF
SignalEncryption_bobRootChainLabel3=Neuer Root Chain Key
    
SignalEncryption_aliceSendingChainLabel1=Sending Chain Key
SignalEncryption_aliceSendingChainLabel2=Konstante
SignalEncryption_aliceSendingChainLabel3=KDF
SignalEncryption_aliceSendingChainLabel4=Message Key
SignalEncryption_aliceSendingChainLabel5=Neuer Sending Chain Key
SignalEncryption_bobSendingChainLabel1=Sending Chain Key
SignalEncryption_bobSendingChainLabel2=KDF
SignalEncryption_bobSendingChainLabel3=Konstante
SignalEncryption_bobSendingChainLabel4=Message Key
SignalEncryption_bobSendingChainLabel5=Neuer Sending Chain Key

SignalEncryption_aliceDefaultMessage=Geben Sie hier Ihre Nachricht an Bob ein.
SignalEncryption_bobDefaultMessage=Geben Sie hier Ihre Nachricht an Alice ein.

SignalEncryption_aliceReceivingChainLabel1=Receiving Chain Key
SignalEncryption_aliceReceivingChainLabel2=Konstante
SignalEncryption_aliceReceivingChainLabel3=KDF
SignalEncryption_aliceReceivingChainLabel4=Message Key
SignalEncryption_aliceReceivingChainLabel5=Neuer Receiving Chain Key
SignalEncryption_bobReceivingChainLabel1=Receiving Chain Key
SignalEncryption_bobReceivingChainLabel2=KDF
SignalEncryption_bobReceivingChainLabel3=Konstante
SignalEncryption_bobReceivingChainLabel4=Message Key
SignalEncryption_bobReceivingChainLabel5=Neuer Receiving Key
SignalEncryption_MessageboxDescription=Nachricht

SignalEncryption_aliceDescriptionText0=Alice initiiert die Kommunikation.
SignalEncryption_bobDescriptionText0=Warten auf Erhalt der ersten Nachricht.
SignalEncryption_stepText1=Schritt 1 Diffie Hellman Ratchet: Zu Beginn erstellt Alice ein Diffie Hellman Key Pair. Sie führt eine Diffie Hellman Berechnung durch, verwendet dabei ihren privaten Schlüssel und Bobs öffentlichen Schlüssel und berechnet sich daraus einen Output. Dieser Vorgang wird als Diffie Hellman Ratchet Step bezeichnet.
SignalEncryption_stepText2=Schritt 2 Root Chain: Der nächste Schritt ist eine Schlüssel-Ableitungs-Funktion, kurz KDF (Key Derivation Function). Eine KDF ist eine kryptografische Funktion, die einen geheimen, zufälligen Schlüssel und einen Input annimmt und einen Output zurückgibt. Als initialer Root Chain Key wird der Shared Secret Key verwendet, welcher im X3DH (siehe Online Hilfe) erstellt wurde. Als Input für die Root Chain wird der zuvor berechnete Output von Alices Diffie Hellman Ratchet Step verwendet. Der Output der Root Chain wird in einen neuen Root Chain Key und einen Sending Chain Key aufgeteilt.
SignalEncryption_stepText3=Schritt 3 Sending Chain: Die Sending Chain ist ebenfalls eine KDF. Als Schlüssel wird der zuvor in der Root Chain erstellte Sending Chain Key verwendet. Im Gegensatz zur Root Chain, bekommt die Sending Chain einen konstanten Wert als Input. Der Output der Sending Chain ist der Message Key und ein neuer Sending Chain Key.
SignalEncryption_stepText4=Schritt 4 Nachricht verfassen: Nun kann Alice ihre Nachricht schreiben.
SignalEncryption_aliceStepText5=Schritt 5 Nachricht verschlüsseln & senden: Alice verschlüsselt nun ihre Nachricht und verwendet dabei ihren Message Key. Neben ihrer verschlüsselten Nachricht, sendet Alice ihren öffentlichen Diffie Hellman Schlüssel.\nNun weiter auf Bobs Seite.
SignalEncryption_bobStepText5=Schritt 5 Nachricht empfangen
SignalEncryption_stepText6=Schritt 6 Diffie Hellman Ratchet: Bob führt eine Diffie Hellman Berechnung durch, verwendet dabei seinen privaten Schlüssel und den von Alice empfangenen öffentlichen Schlüssel und berechnet sich daraus einen Output.
SignalEncryption_stepText7=Schritt 7 Root Chain: Als Input für die Root Chain wird der zuvor berechnete Output von Bobs Diffie Hellman Ratchet Step verwendet. Der Output der Root Chain wird in einen neuen Root Chain Key und einen Receiving Chain Key aufgeteilt.
SignalEncryption_stepText8=Schritt 8 Receiving Chain: Als Schlüssel wird der zuvor in der Root Chain erstellte Receiving Chain Key verwendet. Als konstanter Input wird der gleiche Wert verwendet, den Alice als Input in ihrer Sending Chain verwendet hat. Der Output der Receiving Chain ist der Message Key und ein neuer Receiving Chain Key.
SignalEncryption_stepText9=Schritt 9 Nachricht entschlüsseln: Bob entschlüsselt die Nachricht und verwendet dabei den Message Key.
