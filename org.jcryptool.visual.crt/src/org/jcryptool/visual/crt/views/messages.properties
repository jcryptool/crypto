#Eclipse modern messages class
#Sat May 18 16:05:39 CEST 2013
CheckingEquationDialog_6=Proposes a nearby coprime value
CheckingEquationDialog_7=Saves the input
CRTConstants_ActionFlow=Action Flow
CRTConstants_DialogButtonSuggestion=Suggestion
CRTConstants_DialogButtonVerify=Apply
CRTConstants_DialogHeader=Checking equations
CRTConstants_DialogInfo=Some modules are not paired coprime. Please change the values.
CRTConstants_DialogTitle=Verify Input
CRTConstants_EquationGroup=Equations
CRTConstants_ExportCSV=Export to CSV
CRTConstants_ExportLATEX=Export to Latex
CRTConstants_ExportPDF=Export to PDF
CRTConstants_Inverse=Inverse
CRTConstants_MoreSolution=For other equivalent solutions click
CRTConstants_Next=Next
CRTConstants_Previous=Previous
CRTConstants_Result=Result
CRTConstants_Step1=Add equations of the form x \u2261 a\u2080 mod m\u2080 ,\nx \u2261 a\u2081 mod m\u2081 , ... , x \u2261 a\u1D63 mod m\u1D63. The values\nm\u2080 , ... , m\u1D63 and a\u2080 , ... , a\u1D63 have to be natural numbers.\nAlso m\u2080 , ... , m\u1D63 have to be paired coprime.
CRTConstants_Step1Title=Step 1
CRTConstants_Step2=Compute m \= \u03A0 ( m\u2080 , ... , m\u1D63 ) and M\u1D62 \= m / m\u1D62\nfor 0 \u2264 i \u2264 r.
CRTConstants_Step2Title=Step 2
CRTConstants_Step3=Use the Extended Euclidean to find the\ninverse y\u1D62 of M\u1D62 \: ( y\u1D62 \u2022 M\u1D62 ) \u2261 1 mod m\u1D62 , for 0 \u2264 i \u2264 r,\nbecause of m\u1D62 paired coprime. Note that the\ninverse y\u1D62 can be negative.
CRTConstants_Step3Title=Step 3
CRTConstants_Step4=Now the solution can be calculated in the following\nmanner\: x \= \u03A3 ( a\u1D62 \u2022 y\u1D62 \u2022 M\u1D62 ) mod m , for 0 \u2264 i \u2264 r. \nNote that the algorithm is independent of the \nchoice of the a\u1D62's.
CRTConstants_Step4Title=Step 4
CRTConstants_StepResult=One solution for the simultaneous congruence is\:
CRTConstants_Veify=Verify
CRTGroup_0=x \=
CRTGroup_error_no_equations_text=Please enter some equations.
CRTGroup_error_no_equations_title=No equations
CRTGroup_Header=Chinese Remainder Theorem
CRTGroup_HeaderInfoText=The plugin demonstrates the Chinese Remainder Theorem.\nA number n is searched which equals predefined remainders when being divided by different numbers.
Equation_0=Add another equation to the equation system.\nTwo lines are always retained.
Equation_1=Remove this equation from the equation system.\nTwo lines are always retained.
